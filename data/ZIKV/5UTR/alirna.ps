%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Nov 27 04:32:58 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGUUGUUGAUCUGUGUGAAUCAGACUGCGACAGUUCGAGUUUGAAGCGAAAGCUAGCAACAGUAUCAACAGGUUUUAUUUUGGAUUUGGAAACGAGAGUUUCUGGUC\
) def
/coor [
[258.83050537 252.14901733]
[258.06381226 232.49176025]
[263.68804932 213.62066650]
[251.15573120 205.37803650]
[238.62341309 197.13540649]
[226.09109497 188.89276123]
[213.55877686 180.65013123]
[201.02645874 172.40750122]
[188.49415588 164.16485596]
[175.96183777 155.92222595]
[163.31095886 147.86273193]
[150.54420471 139.98808289]
[137.77746582 132.11343384]
[125.01071167 124.23878479]
[112.64865875 133.45697021]
[97.13338470 136.59518433]
[81.36628723 132.71148682]
[68.44821930 122.21119690]
[61.07033157 106.83320618]
[60.95767593 89.36832428]
[46.58783340 85.06626892]
[32.21799088 80.76422119]
[17.84814835 76.46217346]
[3.47830606 72.16012573]
[-10.89153671 67.85807800]
[-25.26137924 63.55603027]
[-34.53987503 64.08556366]
[-39.98325729 58.91424179]
[-54.22189713 54.19606781]
[-68.46053314 49.47789764]
[-84.40272522 53.32219315]
[-95.50545502 41.25316620]
[-90.34719086 25.68639755]
[-74.23430634 22.63564301]
[-63.74236298 35.23925781]
[-49.50372314 39.95742798]
[-35.26508331 44.67560196]
[-20.95933151 49.18618774]
[-6.58948803 53.48823547]
[7.78035450 57.79028320]
[22.15019798 62.09233475]
[36.52003860 66.39437866]
[50.88988113 70.69642639]
[65.25972748 74.99848175]
[76.01947021 64.54725647]
[72.13718414 50.05837250]
[68.25489807 35.56948471]
[56.28265381 24.36245537]
[60.26512909 8.45422077]
[76.10549164 4.20980883]
[87.50852966 15.99550724]
[82.74378204 31.68719864]
[86.62606812 46.17608643]
[90.50835419 60.66497421]
[107.50128937 61.38485718]
[122.21727753 68.91310883]
[132.15104675 81.52147675]
[135.80058289 96.66109467]
[132.88536072 111.47203827]
[145.65211487 119.34668732]
[158.41885376 127.22133636]
[171.18560791 135.09597778]
[180.28500366 136.98594666]
[184.20446777 143.38990784]
[196.73678589 151.63255310]
[209.26910400 159.87518311]
[221.80142212 168.11781311]
[234.33374023 176.36044312]
[246.86605835 184.60308838]
[259.39837646 192.84571838]
[271.93069458 201.08834839]
[279.94277954 193.33541870]
[289.24279785 187.19560242]
[299.51077271 182.87788391]
[310.39382935 180.52859497]
[321.51834106 180.22645569]
[332.50280762 181.97996521]
[342.97073364 185.72711182]
[352.56387329 191.33761597]
[360.95410156 198.61746216]
[367.85494995 207.31556702]
[373.03125000 217.13244629]
[376.30712891 227.73059082]
[377.57205200 238.74597168]
[376.78451538 249.80061340]
[373.97341919 260.51556396]
[369.23696899 270.52380371]
[362.73928833 279.48294067]
[372.71121216 290.68832397]
[382.68316650 301.89370728]
[392.65509033 313.09906006]
[402.62704468 324.30444336]
[412.59896851 335.50982666]
[428.32745361 340.15167236]
[431.90820312 356.15512085]
[419.65762329 367.05718994]
[404.17807007 361.64279175]
[401.39358521 345.48175049]
[391.42166138 334.27639771]
[381.44970703 323.07101440]
[371.47778320 311.86563110]
[361.50585938 300.66024780]
[351.53390503 289.45489502]
[333.83956909 297.78512573]
[314.38452148 299.96081543]
[295.24972534 295.73675537]
[278.48587036 285.55297852]
] def
/pairs [
[3 71]
[4 70]
[5 69]
[6 68]
[7 67]
[8 66]
[9 65]
[10 64]
[11 62]
[12 61]
[13 60]
[14 59]
[20 44]
[21 43]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[28 37]
[29 36]
[30 35]
[45 54]
[46 53]
[47 52]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
[93 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
3 cmark
4 70 1 gmark
5 69 1 gmark
6 68 1 gmark
7 67 1 gmark
8 66 1 gmark
9 65 1 gmark
11 62 1 gmark
13 60 1 gmark
14 59 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
