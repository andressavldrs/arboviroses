%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.3
%%CreationDate: Tue Jan 16 17:53:07 2018
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (dot.ps)
} def

/sequence { (\
CCCGGAAAACGCAAAACAGCAUAUUGACGCUGGGAAAGACCAGAGACUCCAUGAGUUUCCACCACGCUGGCCGCCAGGCACAGAUCGCCGAAUAGCGGCGGCCGGUGUGGGGAAAUCCAUGGGUCU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.015593133 ubox
1 11 0.005286301 ubox
1 26 0.007536944 ubox
1 29 0.016464013 ubox
1 33 0.013486748 ubox
1 34 0.551941320 ubox
1 38 0.003799298 ubox
1 43 0.009222531 ubox
2 11 0.015912602 ubox
2 19 0.008153593 ubox
2 26 0.016971692 ubox
2 29 0.036513267 ubox
2 32 0.013017307 ubox
2 33 0.554476926 ubox
2 34 0.034098054 ubox
2 38 0.003659022 ubox
2 43 0.032191867 ubox
3 11 0.227383827 ubox
3 19 0.008268028 ubox
3 26 0.092446146 ubox
3 29 0.566702456 ubox
3 32 0.553151758 ubox
3 33 0.033931202 ubox
3 38 0.003692336 ubox
3 43 0.018604359 ubox
4 10 0.255799469 ubox
4 12 0.042985012 ubox
4 17 0.022041445 ubox
4 20 0.012696750 ubox
4 24 0.009404255 ubox
4 25 0.089557123 ubox
4 28 0.587896911 ubox
4 30 0.019234683 ubox
4 31 0.551114921 ubox
4 40 0.003188489 ubox
4 41 0.056849493 ubox
4 125 0.004530139 ubox
4 126 0.011182061 ubox
5 10 0.048011583 ubox
5 12 0.029326065 ubox
5 17 0.007301610 ubox
5 20 0.006228586 ubox
5 22 0.003631283 ubox
5 24 0.079975921 ubox
5 25 0.040130086 ubox
5 28 0.045066879 ubox
5 30 0.550364777 ubox
5 31 0.004501571 ubox
5 40 0.056784244 ubox
5 41 0.005634975 ubox
5 124 0.003189830 ubox
5 125 0.012090368 ubox
6 22 0.010517049 ubox
6 24 0.044886899 ubox
6 25 0.144997335 ubox
6 124 0.010879325 ubox
7 22 0.041083117 ubox
7 24 0.144467462 ubox
7 25 0.524323496 ubox
8 22 0.029631789 ubox
8 24 0.486096384 ubox
8 25 0.311329557 ubox
8 31 0.005543956 ubox
9 22 0.273838471 ubox
9 24 0.307065026 ubox
9 25 0.061640611 ubox
9 31 0.003431772 ubox
9 124 0.003467377 ubox
10 19 0.051287405 ubox
10 26 0.088857325 ubox
10 29 0.400580236 ubox
10 33 0.005973322 ubox
10 34 0.009463488 ubox
10 38 0.037126371 ubox
10 43 0.006198795 ubox
10 123 0.003752041 ubox
11 17 0.018400456 ubox
11 20 0.817001345 ubox
11 22 0.008995537 ubox
11 24 0.010983297 ubox
11 25 0.043478518 ubox
11 28 0.403169340 ubox
11 30 0.019709663 ubox
11 40 0.011462644 ubox
11 41 0.005452867 ubox
12 19 0.817556821 ubox
12 26 0.420214795 ubox
12 29 0.022802449 ubox
12 32 0.007576950 ubox
12 33 0.023454495 ubox
12 34 0.011958882 ubox
12 38 0.023430916 ubox
12 43 0.007488401 ubox
13 22 0.022085779 ubox
13 24 0.013154180 ubox
13 25 0.414403955 ubox
13 31 0.005876161 ubox
14 22 0.016108963 ubox
14 24 0.375147294 ubox
14 25 0.099771289 ubox
15 22 0.078391544 ubox
15 24 0.103007541 ubox
15 25 0.021894997 ubox
16 22 0.116841007 ubox
16 24 0.022626613 ubox
16 25 0.011168347 ubox
17 26 0.096040840 ubox
17 29 0.030499189 ubox
17 32 0.218684289 ubox
17 33 0.007074604 ubox
18 22 0.022047167 ubox
18 24 0.017972553 ubox
18 25 0.093130334 ubox
18 31 0.224753839 ubox
19 24 0.066195859 ubox
19 25 0.004248081 ubox
19 28 0.038286529 ubox
19 30 0.227959837 ubox
20 26 0.060352245 ubox
20 29 0.229192936 ubox
21 25 0.049421194 ubox
22 26 0.006124807 ubox
22 27 0.036669664 ubox
22 29 0.010473979 ubox
24 29 0.007647925 ubox
25 29 0.005990571 ubox
25 44 0.003574587 ubox
26 47 0.011427299 ubox
26 125 0.019723989 ubox
27 124 0.019723666 ubox
28 43 0.005674837 ubox
28 45 0.025010467 ubox
28 123 0.019604899 ubox
30 38 0.004275044 ubox
30 43 0.797267593 ubox
31 37 0.004270945 ubox
31 42 0.801454438 ubox
32 41 0.803332141 ubox
33 40 0.803493985 ubox
33 41 0.147401779 ubox
34 40 0.147496712 ubox
34 41 0.019212744 ubox
37 126 0.023697171 ubox
38 125 0.026282823 ubox
39 124 0.026260065 ubox
40 123 0.025823536 ubox
41 122 0.018861109 ubox
42 48 0.003849943 ubox
42 126 0.017539284 ubox
43 47 0.004055744 ubox
43 49 0.005956555 ubox
43 125 0.018202367 ubox
43 126 0.023192532 ubox
44 48 0.005225390 ubox
44 124 0.017136365 ubox
44 126 0.911518404 ubox
45 125 0.997748224 ubox
45 126 0.003171896 ubox
46 124 0.998154069 ubox
47 123 0.990988600 ubox
48 122 0.122819778 ubox
48 123 0.125202098 ubox
49 121 0.087353472 ubox
49 122 0.992109491 ubox
50 121 0.996144222 ubox
51 120 0.999496333 ubox
52 119 0.999480291 ubox
53 117 0.038918517 ubox
53 118 0.997955288 ubox
54 116 0.047928401 ubox
55 116 0.960066300 ubox
55 117 0.155379727 ubox
56 114 0.003794570 ubox
56 115 0.996993911 ubox
57 113 0.003446706 ubox
57 114 0.998389437 ubox
57 115 0.009324290 ubox
58 113 0.999558172 ubox
58 114 0.007170012 ubox
59 112 0.999979377 ubox
60 111 0.999096522 ubox
60 112 0.003284723 ubox
62 109 0.003236172 ubox
62 110 0.999100907 ubox
63 109 0.999980777 ubox
64 108 0.999791034 ubox
65 107 0.999930588 ubox
66 106 0.999601106 ubox
67 105 0.999985576 ubox
68 104 0.999239364 ubox
69 103 0.999963521 ubox
70 102 0.999988794 ubox
71 78 0.003213167 ubox
71 101 0.999985665 ubox
72 77 0.003445790 ubox
72 97 0.003806163 ubox
72 100 0.999955981 ubox
73 79 0.011698180 ubox
73 96 0.006007924 ubox
73 99 0.999868444 ubox
74 78 0.011629059 ubox
74 95 0.006346458 ubox
74 97 0.007457739 ubox
74 98 0.999798367 ubox
75 83 0.007786478 ubox
75 90 0.034119157 ubox
75 95 0.014794928 ubox
75 97 0.991112134 ubox
75 98 0.004686557 ubox
76 85 0.009899320 ubox
76 93 0.160094651 ubox
77 81 0.011879784 ubox
77 85 0.005820789 ubox
77 86 0.050854117 ubox
77 88 0.005583240 ubox
77 89 0.945614034 ubox
77 93 0.019172832 ubox
77 96 0.098743853 ubox
78 85 0.039785301 ubox
78 86 0.012099037 ubox
78 88 0.948037248 ubox
78 89 0.007148381 ubox
78 93 0.010800005 ubox
78 96 0.249128701 ubox
79 83 0.016107249 ubox
79 87 0.947523259 ubox
79 90 0.021505909 ubox
79 95 0.252493892 ubox
80 85 0.105538301 ubox
80 93 0.041714810 ubox
81 87 0.016617788 ubox
81 90 0.058814640 ubox
81 95 0.008291514 ubox
82 93 0.028477472 ubox
83 88 0.039889980 ubox
83 89 0.121531319 ubox
83 93 0.031105895 ubox
83 96 0.004205068 ubox
84 93 0.021245476 ubox
85 90 0.011142789 ubox
85 91 0.064662568 ubox
85 92 0.021038878 ubox
85 94 0.005752986 ubox
85 98 0.005919537 ubox
86 90 0.065527778 ubox
86 95 0.010715664 ubox
86 97 0.041647497 ubox
86 100 0.005482370 ubox
87 96 0.107742274 ubox
87 99 0.013653283 ubox
88 95 0.107051075 ubox
88 98 0.013827060 ubox
89 95 0.023246969 ubox
89 97 0.014882920 ubox
90 96 0.305100552 ubox
3 29 0.9500000 lbox
4 28 0.9500000 lbox
7 25 0.9500000 lbox
8 24 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
44 126 0.9500000 lbox
45 125 0.9500000 lbox
46 124 0.9500000 lbox
47 123 0.9500000 lbox
49 122 0.9500000 lbox
50 121 0.9500000 lbox
51 120 0.9500000 lbox
52 119 0.9500000 lbox
53 118 0.9500000 lbox
55 116 0.9500000 lbox
56 115 0.9500000 lbox
57 114 0.9500000 lbox
58 113 0.9500000 lbox
59 112 0.9500000 lbox
60 111 0.9500000 lbox
62 110 0.9500000 lbox
63 109 0.9500000 lbox
64 108 0.9500000 lbox
65 107 0.9500000 lbox
66 106 0.9500000 lbox
67 105 0.9500000 lbox
68 104 0.9500000 lbox
69 103 0.9500000 lbox
70 102 0.9500000 lbox
71 101 0.9500000 lbox
72 100 0.9500000 lbox
73 99 0.9500000 lbox
74 98 0.9500000 lbox
75 97 0.9500000 lbox
77 89 0.9500000 lbox
78 88 0.9500000 lbox
79 87 0.9500000 lbox
showpage
end
%%EOF
