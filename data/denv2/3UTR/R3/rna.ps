%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.3
%%CreationDate: Tue Jan 16 17:53:06 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGGAAGGACUAGAGGUUAGAGGAGACCCCCCCAAAACAAAAAACAGCAUAUUGACGCUGGGAAAGACCAGAGAUCCUGCUGUCUCCUCAGCAUCAUUCCAGGCACAGAACGCCAGAAAAUGGAAUG\
) def
/coor [
[185.79214478 292.35055542]
[178.76197815 305.60110474]
[167.52629089 315.53884888]
[153.51628113 320.89791870]
[138.51658630 320.99563599]
[124.43794250 315.81958008]
[113.07370758 306.02908325]
[105.87149048 292.87124634]
[103.74873352 278.02221680]
[106.97584534 263.37347412]
[115.14173889 250.79101562]
[127.20622253 241.87765503]
[141.63249207 237.76876831]
[156.58287048 238.98779297]
[170.15101624 245.37803650]
[162.70463562 232.35684204]
[155.25825500 219.33564758]
[149.14096069 215.04498291]
[147.79330444 205.89901733]
[140.67126465 192.69761658]
[133.54924011 179.49623108]
[126.42721558 166.29484558]
[119.30518341 153.09344482]
[112.18315125 139.89205933]
[105.06112671 126.69067383]
[97.93909454 113.48928070]
[96.38225555 128.40826416]
[90.38587952 142.15757751]
[80.51168823 153.44918823]
[67.68469238 161.22531128]
[53.10650253 164.75749207]
[38.14278030 163.71485901]
[24.19531441 158.19505310]
[12.57067871 148.71519470]
[4.35785532 136.16331482]
[0.32620984 121.71527863]
[0.85342103 106.72454834]
[5.89010048 92.59543610]
[14.96441936 80.65153503]
[27.22630692 72.01174164]
[41.52708817 67.48540497]
[56.52708435 67.49656677]
[70.82111359 72.04415894]
[83.07013702 80.70218658]
[92.12742615 92.66095734]
[91.38562012 77.67930603]
[90.64381409 62.69766235]
[89.90200806 47.71601486]
[81.97680664 42.26184845]
[77.57339478 33.86436081]
[77.59332275 24.52107048]
[81.90278625 16.38755226]
[89.39321136 11.28012943]
[89.76422882 -3.71528172]
[89.94974518 -18.71413422]
[82.21244812 -32.51430511]
[89.94974518 -45.24157715]
[89.94974518 -60.24157715]
[89.94974518 -75.24157715]
[89.94974518 -90.24157715]
[78.59860992 -101.23826599]
[78.43151855 -117.04167175]
[89.54760742 -128.27590942]
[105.35189056 -128.27590942]
[116.46797943 -117.04167175]
[116.30088806 -101.23826599]
[104.94974518 -90.24157715]
[104.94974518 -75.24157715]
[104.94974518 -60.24157715]
[104.94974518 -45.24157715]
[112.68704987 -32.51430511]
[104.94974518 -18.71413422]
[108.13005066 -11.95270729]
[104.75963593 -3.34426522]
[104.38861847 11.65114594]
[115.92584991 28.69260788]
[104.88365173 46.97420883]
[105.62545776 61.95585632]
[106.36726379 76.93750000]
[107.10906982 91.91915131]
[111.14048767 106.36724854]
[118.26251221 119.56864166]
[125.38454437 132.77003479]
[132.50657654 145.97142029]
[139.62860107 159.17280579]
[146.75062561 172.37420654]
[153.87266541 185.57559204]
[160.99468994 198.77697754]
[168.27944946 211.88928223]
[175.72583008 224.91046143]
[183.17221069 237.93165588]
[189.62107849 240.85954285]
[193.48558044 245.98640442]
[194.30364990 251.68943787]
[205.48387146 261.68957520]
[216.66409302 271.68972778]
[227.84429932 281.68984985]
[239.02452087 291.69000244]
[250.20474243 301.69012451]
[261.38494873 311.69027710]
[273.27584839 320.83395386]
[285.81192017 329.07086182]
[298.34802246 337.30773926]
[313.27362061 332.64297485]
[327.68579102 338.71121216]
[334.77951050 352.64724731]
[331.20538330 367.87088013]
[318.65097046 377.19403076]
[303.04406738 376.21450806]
[291.75384521 365.39489746]
[290.11111450 349.84384155]
[277.57504272 341.60693359]
[265.03894043 333.37005615]
[266.30047607 348.31689453]
[256.79910278 359.92398071]
[241.89758301 361.63998413]
[230.00662231 352.49639893]
[227.83772278 337.65402222]
[236.61503601 325.49020386]
[251.38481140 322.87048340]
[240.20460510 312.87036133]
[229.02438354 302.87020874]
[217.84416199 292.87008667]
[206.66395569 282.86993408]
[195.48373413 272.86981201]
[184.30351257 262.86965942]
] def
/pairs [
[15 91]
[16 90]
[17 89]
[19 88]
[20 87]
[21 86]
[22 85]
[23 84]
[24 83]
[25 82]
[26 81]
[45 80]
[46 79]
[47 78]
[48 77]
[53 75]
[54 74]
[55 72]
[57 70]
[58 69]
[59 68]
[60 67]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
[100 120]
[101 113]
[102 112]
[103 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
