%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Nov 27 04:32:08 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGUUGUU__AGUCUACGUGGACCGACAAAG_ACAG_AUUCUUUGAGGGAGCUAAGCUUAACGUAGUUCUAACAGUUUUUUAAUUAGAGAGCAGAUCUCUG\
) def
/coor [
[230.05244446 314.53927612]
[213.86366272 304.94226074]
[202.35812378 290.01098633]
[197.18772888 271.85256958]
[199.10839844 253.03988647]
[207.86961365 236.24725342]
[197.68331909 225.23637390]
[192.86170959 224.16734314]
[188.72706604 219.94662476]
[187.23242188 213.20977783]
[177.75036621 201.58692932]
[161.07984924 196.35287476]
[158.07812500 178.26872253]
[148.23919678 166.94638062]
[138.40025330 155.62403870]
[128.56132507 144.30169678]
[118.72240448 132.97935486]
[108.88347626 121.65700531]
[94.70333862 124.70558929]
[80.32232666 118.67082214]
[71.37955475 104.58044434]
[72.11743927 86.81349945]
[59.53314972 78.65043640]
[46.97322845 84.56678772]
[33.24243164 83.46681976]
[21.96421051 75.74930573]
[16.06083488 63.54497147]
[16.99652672 50.12926865]
[4.67219162 41.57878494]
[-7.65214300 33.02830124]
[-16.65790939 30.64317894]
[-20.22116089 24.01530457]
[-35.81439972 26.58948326]
[-48.61186218 17.31583405]
[-51.02103424 1.69624841]
[-41.61260223 -11.00244999]
[-25.96841812 -13.24634838]
[-13.36990166 -3.70418262]
[-11.29152775 11.96284962]
[0.89834094 20.70396614]
[13.22267532 29.25444984]
[25.54701042 37.80493164]
[40.77405548 31.89384651]
[56.70003891 36.20503998]
[67.07151794 49.24842453]
[67.69621277 66.06614685]
[80.28050232 74.22920990]
[93.97735596 68.11395264]
[96.30082703 53.29499817]
[98.62429810 38.47603989]
[100.94776917 23.65708542]
[97.42786407 7.07255697]
[112.38985443 -0.90084803]
[124.19354248 11.26916409]
[115.76673126 25.98055840]
[113.44325256 40.79951477]
[111.11978149 55.61846924]
[108.79631042 70.43742371]
[125.22904968 90.03479767]
[120.20581818 111.81807709]
[130.04473877 123.14041901]
[139.88368225 134.46276855]
[149.72261047 145.78511047]
[159.56153870 157.10745239]
[169.40046692 168.42979431]
[182.30030823 170.14759827]
[190.25860596 179.92973328]
[189.37322998 192.10487366]
[198.85527039 203.72773743]
[208.69419861 215.05007935]
[218.88049316 226.06095886]
[229.25909424 220.70066833]
[240.58479309 217.88247681]
[252.24508667 217.75404358]
[263.61050415 220.31764221]
[274.06854248 225.43037415]
[283.05670166 232.81205750]
[290.09277344 242.06068420]
[294.80059814 252.67414856]
[296.93032837 264.07769775]
[296.37149048 275.65487671]
[293.15893555 286.78097534]
[287.47055054 296.85665894]
[279.61737061 305.34036255]
[287.58374023 318.05007935]
[295.55010986 330.75979614]
[303.51647949 343.46951294]
[311.48284912 356.17926025]
[319.44921875 368.88897705]
[334.70159912 373.86328125]
[340.18707275 388.93939209]
[331.69760132 402.55221558]
[315.74560547 404.25912476]
[304.56811523 392.75076294]
[306.73950195 376.85534668]
[298.77313232 364.14559937]
[290.80676270 351.43588257]
[282.84039307 338.72616577]
[274.87402344 326.01644897]
[266.90765381 313.30673218]
] def
/pairs [
[6 71]
[7 70]
[10 69]
[11 68]
[13 65]
[14 64]
[15 63]
[16 62]
[17 61]
[18 60]
[22 47]
[23 46]
[28 42]
[29 41]
[30 40]
[32 39]
[48 58]
[49 57]
[50 56]
[51 55]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
] def

init

% switch off outline pairs or bases by removing these lines
/range 0.8 def
/drawreliability {
  /Smax 1.0 def
  0
  coor {
    aload pop
    S 3 index get
    Smax div range mul
    invert {range exch sub} if
    dup 0 ge
    {1 1 sethsbcolor} {pop 1 1 1 setrgbcolor} ifelse
    newpath
    fsize 2 div 0 360 arc
    fill
    1 add
  } forall
} bind def
/colorbar { % xloc yloc colorbar -> []
  /STR 8 string def
  gsave
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    /tics 64 def
    gsave
      10 tics div 1 scale
      0 1 tics
      {
          dup 0 moveto 0.5 add
          tics div range mul
          invert {range exch sub} if
          1 1 sethsbcolor
          1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
      } for
    grestore
    0 setgray
    -0.1 1.01 moveto (0) gsave 0.1 dup scale show grestore
    10 1.01 moveto Smax STR cvs
    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def
/S [
  -0.00000
  0.00010
  0.08415
  -0.00000
  0.00074
  0.99615
  0.50917
  -0.00000
  -0.00000
  0.38197
  0.39578
  0.00004
  0.05610
  0.02384
  0.01747
  0.01087
  0.04158
  0.41617
  0.23779
  0.09890
  0.06009
  0.49661
  0.56446
  0.01670
  0.01933
  0.23691
  0.14503
  0.72945
  0.31586
  0.27329
  -0.00000
  0.59512
  0.02458
  0.01556
  0.04103
  -0.00000
  0.01568
  0.00690
  0.63322
  0.28936
  0.39402
  0.77868
  0.03705
  0.01071
  0.04820
  0.55919
  0.59744
  0.17873
  0.09954
  0.07673
  0.16344
  0.00014
  0.00024
  0.00057
  0.16437
  0.08191
  0.12028
  0.20940
  0.02200
  0.36593
  0.04035
  0.01094
  0.01762
  0.02479
  0.06047
  0.06219
  0.07612
  0.36297
  0.37131
  0.52726
  1.00172
  0.01919
  -0.00000
  0.37823
  0.30973
  0.30704
  0.12083
  0.11163
  0.10699
  0.00008
  0.21090
  0.21127
  0.20450
  0.96594
  0.30795
  0.15552
  0.15861
  0.15426
  0.28626
  0.14029
  0.10400
  0.01676
  0.03174
  0.00268
  0.23426
  0.14649
  0.14814
  0.15321
  0.32883
  0.98119
] def

/invert false def
drawreliability
0.1 0.1 colorbar
drawoutline
drawpairs
drawbases
% Start Annotations
6 71 2 gmark
7 70 2 gmark
10 69 1 gmark
11 68 2 gmark
68 cmark
13 65 1 gmark
14 64 1 gmark
64 cmark
15 63 2 gmark
15 cmark
16 62 1 gmark
16 cmark
17 61 1 gmark
61 cmark
60 cmark
23 46 1 gmark
32 cmark
48 58 1 gmark
48 cmark
58 cmark
51 cmark
55 cmark

% End Annotations
% show it
showpage
end
%%EOF
