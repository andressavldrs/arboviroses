%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.3
%%CreationDate: Tue Jan 16 17:53:06 2018
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (dot.ps)
} def

/sequence { (\
AGUUGUUAGUCUACGUGGACCGACAAAGACAGAUUCUUUGAGGGAGCUAAGCUUAACGUAGUUCUAACAGUUUUUUAAUUAGAGAGCAGAUCUCUG\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.074268124 ubox
1 72 0.284435380 ubox
1 73 0.049224220 ubox
1 74 0.046440189 ubox
1 75 0.026481294 ubox
1 76 0.030398371 ubox
1 79 0.003468279 ubox
1 80 0.017240137 ubox
1 93 0.003792723 ubox
1 95 0.006162988 ubox
2 68 0.010113070 ubox
2 71 0.376819567 ubox
2 72 0.057996395 ubox
2 73 0.056224816 ubox
2 74 0.035016893 ubox
2 75 0.033671548 ubox
2 76 0.016075675 ubox
2 79 0.024236636 ubox
2 80 0.005236187 ubox
2 92 0.004309590 ubox
2 94 0.006242235 ubox
3 26 0.004430286 ubox
3 67 0.009892526 ubox
3 69 0.031779001 ubox
3 70 0.760968979 ubox
3 77 0.005229775 ubox
3 78 0.022491825 ubox
3 90 0.003276503 ubox
4 25 0.005364899 ubox
4 66 0.008979860 ubox
4 69 0.968694193 ubox
4 70 0.012489459 ubox
4 77 0.011455411 ubox
5 24 0.005681901 ubox
5 65 0.007857479 ubox
5 68 0.999766591 ubox
6 23 0.005714772 ubox
6 67 0.999395575 ubox
7 22 0.005527106 ubox
7 66 0.999184097 ubox
8 63 0.007552998 ubox
8 65 0.999293584 ubox
9 20 0.007198706 ubox
9 62 0.012878786 ubox
9 63 0.014081586 ubox
9 64 0.998024629 ubox
10 19 0.007573414 ubox
10 61 0.003261814 ubox
11 18 0.007638702 ubox
11 61 0.998225665 ubox
12 17 0.007146414 ubox
12 60 0.999385854 ubox
12 61 0.007144687 ubox
13 59 0.999694480 ubox
14 58 0.999916669 ubox
15 47 0.009555681 ubox
15 52 0.010177422 ubox
15 57 0.998799766 ubox
16 46 0.011020221 ubox
16 49 0.082090680 ubox
16 50 0.007210920 ubox
16 51 0.011582679 ubox
16 55 0.062027359 ubox
16 56 0.967367509 ubox
17 21 0.009112092 ubox
17 24 0.008090417 ubox
17 47 0.262983667 ubox
17 48 0.165387435 ubox
17 52 0.027158242 ubox
17 53 0.058693059 ubox
17 54 0.071966276 ubox
17 57 0.005197940 ubox
18 47 0.166131759 ubox
18 48 0.008149007 ubox
18 52 0.061632876 ubox
18 53 0.043286018 ubox
18 54 0.178259503 ubox
19 48 0.018628666 ubox
19 53 0.177952235 ubox
19 54 0.045799595 ubox
20 42 0.022731809 ubox
20 43 0.807691024 ubox
20 44 0.559026377 ubox
20 46 0.009776716 ubox
20 51 0.010750941 ubox
21 40 0.003677149 ubox
21 42 0.809139013 ubox
21 43 0.577468938 ubox
21 44 0.019635130 ubox
21 46 0.003398476 ubox
21 51 0.009973035 ubox
22 39 0.003446278 ubox
24 40 0.996944229 ubox
25 38 0.003719866 ubox
25 39 0.998857233 ubox
26 38 0.998535723 ubox
26 39 0.004460618 ubox
27 37 0.999295642 ubox
27 38 0.004239731 ubox
28 35 0.006612310 ubox
28 36 0.999709713 ubox
28 37 0.003595502 ubox
29 34 0.043979937 ubox
29 35 0.950913224 ubox
30 40 0.003791799 ubox
31 35 0.006813437 ubox
31 39 0.003795524 ubox
32 38 0.003685557 ubox
39 69 0.003358957 ubox
40 68 0.003505660 ubox
41 48 0.015459618 ubox
41 53 0.004951238 ubox
41 54 0.018398058 ubox
42 47 0.015930077 ubox
42 52 0.005179339 ubox
42 53 0.020174619 ubox
42 54 0.005294623 ubox
43 52 0.020542109 ubox
43 53 0.005953721 ubox
43 54 0.005672336 ubox
43 65 0.006143618 ubox
44 52 0.010701606 ubox
44 53 0.010224232 ubox
44 54 0.783322865 ubox
44 64 0.007317919 ubox
45 53 0.892941391 ubox
45 54 0.030887053 ubox
45 63 0.007502869 ubox
46 52 0.909414751 ubox
46 53 0.014486332 ubox
46 54 0.004422268 ubox
46 62 0.007574408 ubox
47 51 0.902900128 ubox
47 61 0.007585824 ubox
48 55 0.035965935 ubox
48 60 0.007529502 ubox
49 53 0.004416276 ubox
49 54 0.035520570 ubox
49 59 0.006727058 ubox
50 54 0.006550733 ubox
51 57 0.006297128 ubox
69 74 0.003991303 ubox
69 75 0.005005079 ubox
69 76 0.012716030 ubox
69 79 0.004128438 ubox
69 80 0.043626849 ubox
70 74 0.006844657 ubox
70 75 0.020546252 ubox
70 76 0.020060772 ubox
70 79 0.115546189 ubox
70 80 0.009083486 ubox
70 87 0.110650952 ubox
71 77 0.023364961 ubox
71 78 0.124231303 ubox
71 82 0.003164637 ubox
71 84 0.004592008 ubox
71 85 0.010611626 ubox
71 86 0.111058398 ubox
72 77 0.122322969 ubox
72 78 0.025313806 ubox
72 81 0.007335635 ubox
72 82 0.003440946 ubox
72 83 0.006495375 ubox
72 84 0.011645513 ubox
72 85 0.111332776 ubox
72 86 0.007559830 ubox
72 96 0.003270914 ubox
73 77 0.024460011 ubox
73 78 0.015646722 ubox
73 81 0.005700831 ubox
73 82 0.007975075 ubox
73 83 0.012545342 ubox
73 84 0.111294980 ubox
73 85 0.009915967 ubox
73 86 0.003604173 ubox
73 96 0.003711599 ubox
74 78 0.010491768 ubox
74 81 0.010767323 ubox
74 82 0.013179817 ubox
74 83 0.111145631 ubox
74 84 0.010521534 ubox
74 85 0.004653160 ubox
74 96 0.004367932 ubox
75 81 0.014338288 ubox
75 82 0.109432801 ubox
75 83 0.010990318 ubox
75 84 0.004779905 ubox
75 96 0.006038950 ubox
76 81 0.091252713 ubox
76 82 0.011231628 ubox
76 83 0.004505366 ubox
76 96 0.009844112 ubox
77 95 0.006390159 ubox
78 95 0.006584733 ubox
79 96 0.040589627 ubox
80 96 0.787699362 ubox
81 93 0.009233558 ubox
81 95 0.973423850 ubox
82 92 0.009969927 ubox
82 94 0.991012899 ubox
83 91 0.009889373 ubox
83 93 0.990974165 ubox
83 95 0.064475337 ubox
84 92 0.991086364 ubox
84 94 0.066351437 ubox
85 91 0.981117247 ubox
85 93 0.066322519 ubox
86 91 0.009671749 ubox
86 92 0.065674151 ubox
87 96 0.022982861 ubox
88 95 0.035693895 ubox
89 94 0.036595969 ubox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
8 65 0.9500000 lbox
9 64 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
15 57 0.9500000 lbox
16 56 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
29 35 0.9500000 lbox
44 54 0.9500000 lbox
45 53 0.9500000 lbox
46 52 0.9500000 lbox
47 51 0.9500000 lbox
80 96 0.9500000 lbox
81 95 0.9500000 lbox
82 94 0.9500000 lbox
83 93 0.9500000 lbox
84 92 0.9500000 lbox
85 91 0.9500000 lbox
showpage
end
%%EOF
