%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Nov 27 04:31:56 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCUGUAGCUCCAUCGUGGGGAUGUAAAAACCUGGGAGGCUGCAACCCAUGGAAGCUGUACGCAUGGGGUAGCAGACUAGUGGUUAGAGGAGACCCCUCCCGAAACAUAACGCAGCAGCGGGGCCCAACACCAGGGGAAGCUGUACCCUGGUG\
) def
/coor [
[147.09938049 234.85067749]
[138.18322754 222.78823853]
[129.26707458 210.72581482]
[120.35092163 198.66337585]
[111.43477631 186.60095215]
[97.64751434 180.96528625]
[95.66659546 165.26858521]
[86.75044250 153.20616150]
[77.83428955 141.14372253]
[63.06217575 138.53900146]
[50.55813980 146.82447815]
[45.09027481 154.22030640]
[37.71122360 155.14862061]
[25.03970718 163.17561340]
[17.52225304 177.09677124]
[2.63017845 177.37133789]
[-10.04133797 185.39833069]
[-22.71285439 193.42532349]
[-35.38436890 201.45233154]
[-34.67364883 216.79476929]
[-41.74361420 230.42968750]
[-54.69248581 238.68936157]
[-70.03707886 239.35198975]
[-83.64977264 232.23931885]
[-91.86882782 219.26463318]
[-92.48335266 203.91802979]
[-85.32804871 190.32769775]
[-72.32765198 182.14935303]
[-56.97920609 181.58293152]
[-43.41136551 188.78080750]
[-30.73985100 180.75381470]
[-18.06833458 172.72682190]
[-5.39681864 164.69981384]
[1.21428406 151.35281372]
[17.01271057 150.50410461]
[29.68422699 142.47711182]
[42.27266693 134.32043457]
[54.77670288 126.03496552]
[56.00731277 111.08553314]
[45.02651215 100.86682129]
[34.04570770 90.64811707]
[23.06490707 80.42941284]
[5.62765789 81.39355469]
[-6.88691616 69.70095062]
[-7.09898758 52.91231918]
[-18.28728485 42.92122269]
[-29.47558022 32.93012619]
[-40.66387558 22.93902969]
[-51.85217285 12.94793224]
[-63.04047012 2.95683575]
[-77.35018158 8.38737106]
[-92.54309845 6.53430414]
[-105.12799835 -2.17654347]
[-112.21296692 -15.74348259]
[-112.16992188 -31.04893112]
[-105.00876617 -44.57580566]
[-92.37506866 -53.21573639]
[-77.17197418 -54.98332214]
[-62.89302826 -49.47238922]
[-52.81943893 -37.94931030]
[-49.26603699 -23.06200218]
[-53.04937363 -8.23146057]
[-41.86107635 1.75963604]
[-30.67278099 11.75073338]
[-19.48448372 21.74183083]
[-8.29618740 31.73292732]
[2.89210939 41.72402573]
[15.56526470 39.20540619]
[27.54599190 44.54309082]
[34.34822083 55.98471832]
[33.28361511 69.44860840]
[44.26441574 79.66731262]
[55.24522018 89.88602448]
[66.22602081 100.10472870]
[69.98630524 87.61231232]
[77.97560120 77.95027924]
[88.63942719 72.38492584]
[100.12136078 71.44417572]
[110.58179474 74.88678741]
[119.98564911 63.20058060]
[129.38951111 51.51436996]
[123.96006775 37.21512604]
[126.40082550 22.21714211]
[135.95745850 10.53223038]
[149.98588562 5.23513126]
[164.68319702 7.65477705]
[167.65168762 -1.05061436]
[174.40206909 -4.17222834]
[184.04388428 -15.66289520]
[193.68569946 -27.15356064]
[203.32751465 -38.64422989]
[205.64077759 -54.87940216]
[220.95629883 -60.74173737]
[233.51876831 -50.20056915]
[230.40501404 -34.09974670]
[214.81817627 -29.00241470]
[205.17636108 -17.51174736]
[195.53454590 -6.02108097]
[185.89273071 5.46958590]
[176.36940002 17.05863380]
[181.87727356 30.89803314]
[179.70394897 45.73490143]
[170.33404541 57.57006836]
[156.20544434 63.16288757]
[141.07571411 60.91822815]
[131.67185974 72.60443878]
[122.26800537 84.29064178]
[127.77626801 94.38228607]
[128.74655151 106.28574371]
[124.65338898 117.97900391]
[115.86195374 127.33048248]
[103.62197113 132.48574829]
[89.89672089 132.22756958]
[98.81287384 144.29000854]
[107.72902679 156.35243225]
[122.15402985 162.85087585]
[123.49720764 177.68479919]
[132.41336060 189.74723816]
[141.32951355 201.80966187]
[150.24565125 213.87210083]
[159.16180420 225.93452454]
[166.81147766 225.33668518]
[174.11807251 227.44447327]
[180.16406250 231.94319153]
[184.20790100 238.22114563]
[185.77478027 245.45249939]
[184.71205139 252.70576477]
[181.20265198 259.06378174]
[188.83561707 271.97647095]
[196.46859741 284.88916016]
[204.10156250 297.80184937]
[211.73452759 310.71456909]
[219.36750793 323.62725830]
[227.00047302 336.53994751]
[234.10600281 342.38009644]
[234.65446472 349.79705811]
[250.08395386 351.44354248]
[261.57629395 361.86975098]
[264.71243286 377.06658936]
[258.28649902 391.19058228]
[244.76937866 398.81076050]
[229.35867310 396.99697876]
[217.98011780 386.44671631]
[215.00900269 371.21676636]
[221.58776855 357.16329956]
[214.08776855 344.17291260]
[206.45480347 331.26022339]
[198.82183838 318.34753418]
[191.18887329 305.43484497]
[183.55589294 292.52212524]
[175.92292786 279.60943604]
[168.28996277 266.69674683]
] def
/pairs [
[1 121]
[2 120]
[3 119]
[4 118]
[5 117]
[7 115]
[8 114]
[9 113]
[10 38]
[11 37]
[13 36]
[14 35]
[16 33]
[17 32]
[18 31]
[19 30]
[39 74]
[40 73]
[41 72]
[42 71]
[45 67]
[46 66]
[47 65]
[48 64]
[49 63]
[50 62]
[79 107]
[80 106]
[81 105]
[86 100]
[88 99]
[89 98]
[90 97]
[91 96]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[133 147]
[134 146]
[136 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
118 cmark
5 117 1 gmark
8 114 1 gmark
16 cmark
32 cmark
40 73 1 gmark
72 cmark
42 cmark
45 67 2 gmark
45 cmark
46 cmark
47 cmark
107 cmark
80 106 2 gmark
86 100 1 gmark
99 cmark
129 cmark
130 150 1 gmark
131 cmark
132 148 1 gmark
133 147 1 gmark
133 cmark
147 cmark
136 145 1 gmark
145 cmark

% End Annotations
% show it
showpage
end
%%EOF
