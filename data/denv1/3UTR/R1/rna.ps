%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.3
%%CreationDate: Tue Jan 16 17:53:06 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUCAACACAUUUACAAAAUAAAGGAAAAUAAGAAAUCAAACAAGGCAAGAAGUCAGGCCGGAUUAAGCCAUAGUACGGUAAGAGCUAUGCUGCCUGUGAGCCCCGUCUAAGGACGUAAAAUGAAGUCAGGCCGAAAGCCACGGCUUGAGCAAACCGUGCUG\
) def
/coor [
[-28.14120102 150.32971191]
[-14.95888233 157.48698425]
[-2.86085796 166.35478210]
[7.93233490 176.77145386]
[17.22394371 188.54710388]
[24.84458733 201.46707153]
[30.65534973 215.29585266]
[34.55030060 229.78134155]
[36.45844269 244.65948486]
[36.34498978 259.65905762]
[34.21200562 274.50662231]
[30.09837914 288.93151855]
[24.07909584 302.67083740]
[16.26388550 315.47406006]
[6.79521132 327.10778809]
[-4.15431786 337.36001587]
[-16.38509941 346.04379272]
[-29.67417717 353.00082397]
[-43.77929688 358.10430908]
[-58.44333649 361.26123047]
[-73.39897156 362.41397095]
[-88.37358093 361.54159546]
[-103.09418488 358.65994263]
[-117.29244232 353.82159424]
[-130.70951843 347.11474609]
[-143.10083008 338.66162109]
[-154.24049377 328.61633301]
[-163.92544556 317.16198730]
[-171.97914124 304.50741577]
[-178.25474548 290.88330078]
[-182.63787842 276.53799438]
[-185.04864502 261.73297119]
[-185.44306946 246.73815918]
[-183.81398010 231.82688904]
[-180.19108582 217.27098083]
[-174.64039612 203.33576965]
[-167.26312256 190.27529907]
[-158.19375610 178.32765198]
[-147.59759521 167.71061707]
[-135.66781616 158.61773682]
[-122.62189484 151.21476746]
[-108.69763947 145.63667297]
[-94.14888763 141.98512268]
[-79.24404907 140.32682800]
[-93.43627167 135.47082520]
[-107.62849426 130.61480713]
[-122.60907745 136.35603333]
[-136.36437988 128.09945679]
[-138.34252930 112.17882538]
[-127.02603149 100.80708313]
[-111.09595490 102.70765686]
[-102.77248383 116.42258453]
[-88.58026123 121.27859497]
[-74.38803864 126.13460541]
[-70.20615387 119.90870667]
[-57.66051483 101.23099518]
[-67.52333069 89.92945862]
[-77.38615417 78.62791443]
[-92.82894897 80.14437103]
[-106.19672394 72.26513672]
[-112.34928894 58.01994324]
[-108.92086029 42.88635635]
[-97.22973633 32.68354797]
[-81.77140045 31.33470535]
[-68.48989105 39.35848999]
[-62.49221802 53.66959000]
[-66.08461761 68.76509857]
[-56.22179413 80.06663513]
[-46.35897446 91.36817169]
[-50.38403320 110.74415588]
[-59.95767212 126.97508240]
[-45.29766464 123.79952240]
[-30.63765526 120.62396240]
[-15.97764778 117.44840240]
[-1.31763947 114.27285004]
[13.34236813 111.09729004]
[28.00237656 107.92173004]
[42.66238403 104.74617004]
[57.32239151 101.57061768]
[59.71877670 85.81309509]
[67.72590637 72.03166199]
[80.22846985 62.14591599]
[95.48499298 57.53283691]
[111.37041473 58.83498001]
[117.84120178 45.30247116]
[124.31199646 31.76995850]
[120.75960541 19.33719063]
[126.46601868 8.18333817]
[137.87214661 4.06346607]
[144.60412598 -9.34102345]
[140.94306946 -24.96076012]
[150.98521423 -37.47215271]
[167.02708435 -37.27753067]
[176.76274109 -24.52619362]
[172.72381592 -8.99987411]
[158.00862122 -2.60903573]
[151.27664185 10.79545403]
[153.26023865 28.21086884]
[137.84451294 38.24074936]
[131.37371826 51.77326202]
[124.90292358 65.30577087]
[131.60261536 67.29613495]
[138.21128845 70.53897095]
[144.50155640 75.04366302]
[157.90603638 68.31167603]
[171.31053162 61.57968903]
[184.71501160 54.84769821]
[193.26951599 40.85654068]
[209.65443420 41.53981400]
[217.01435852 56.19462967]
[207.77803040 69.74536896]
[191.44700623 68.25218964]
[178.04251099 74.98417664]
[164.63803101 81.71616364]
[151.23353577 88.44815063]
[150.72486877 95.93088531]
[165.71591187 96.44946289]
[180.70693970 96.96804047]
[194.49456787 91.06032562]
[206.72926331 99.73859406]
[205.71124268 114.70401001]
[192.41401672 121.64546204]
[179.55415344 113.92623901]
[164.63084412 112.41129303]
[149.70755005 110.89634705]
[149.19888306 118.37907410]
[161.56901550 126.86318207]
[173.93913269 135.34729004]
[186.30926514 143.83139038]
[198.67938232 152.31549072]
[211.04951477 160.79959106]
[223.41963196 169.28369141]
[235.78976440 177.76779175]
[250.80502319 173.40020752]
[265.09390259 179.75332642]
[271.90960693 193.82742310]
[268.03399658 208.97712708]
[255.29698181 218.04922485]
[239.71261597 216.76013184]
[228.63935852 205.71852112]
[227.30564880 190.13792419]
[214.93553162 181.65382385]
[202.56539917 173.16972351]
[190.19528198 164.68560791]
[177.82514954 156.20150757]
[165.45503235 147.71740723]
[153.08489990 139.23330688]
[140.71478271 130.74920654]
[123.79248047 143.24568176]
[103.90637207 147.53533936]
[84.69275665 143.41294861]
[69.43398285 132.16168213]
[60.49795151 116.23062134]
[45.83794403 119.40618134]
[31.17793465 122.58174133]
[16.51792717 125.75729370]
[1.85791862 128.93286133]
[-12.80208969 132.10841370]
[-27.46209717 135.28396606]
[-42.12210464 138.45953369]
[-56.78211212 141.63508606]
] def
/pairs [
[44 54]
[45 53]
[46 52]
[56 69]
[57 68]
[58 67]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[76 156]
[77 155]
[78 154]
[79 153]
[84 101]
[85 100]
[86 99]
[89 97]
[90 96]
[104 115]
[105 114]
[106 113]
[107 112]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
