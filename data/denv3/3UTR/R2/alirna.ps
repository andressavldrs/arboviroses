%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Nov 27 04:32:36 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGCCUGUAGCUCCGUCGUGGGGACGUAAAACCUGGGAGGCUGCAAACUGUGGAAGCUGUACGCACGGUGUAGCAGACUAGCGGUUAGAGGAGACCCCUCCCAUGACACAACGCAGCAGCGGGGCCCGAGCACUGAGGGAAGCUGUACCUCCU\
) def
/coor [
[40.59768677 198.28692627]
[43.40215683 210.35415649]
[43.58939743 222.73420715]
[41.15403748 234.86627197]
[36.20944214 246.20149231]
[28.98242950 256.22766113]
[19.80286789 264.49252319]
[9.08862019 270.62399292]
[-2.67347622 274.34707642]
[-14.94972801 275.49612427]
[-27.18380547 274.02221680]
[-38.82195282 269.99514771]
[-49.33805084 263.60031128]
[-59.89006805 274.26119995]
[-70.44208527 284.92211914]
[-80.99409485 295.58303833]
[-82.34992981 311.56869507]
[-95.77281952 320.35534668]
[-110.96588135 315.20263672]
[-116.27429962 300.06329346]
[-107.62590027 286.55087280]
[-91.65500641 285.03100586]
[-81.10298920 274.37008667]
[-70.55097961 263.70919800]
[-59.99896240 253.04827881]
[-68.67015839 237.50953674]
[-72.21075439 220.05398560]
[-70.27577972 202.33174133]
[-63.03837204 186.02122498]
[-51.17431259 172.67027283]
[-35.79896927 163.54914856]
[-18.36242104 159.52983093]
[-0.51270586 161.00251770]
[16.05994034 167.83786011]
[25.46379662 156.15165710]
[34.86765289 144.46545410]
[44.27151108 132.77923584]
[53.67536926 121.09303284]
[63.07922745 109.40682220]
[62.30956650 94.42658234]
[51.75754929 83.76567078]
[41.20553589 73.10475922]
[30.65352058 62.44385147]
[13.19139099 62.69129944]
[1.16740763 50.49477005]
[1.64477301 33.71158600]
[-9.12390614 23.26957703]
[-19.89258385 12.82756710]
[-30.66126442 2.38555765]
[-41.42994308 -8.05645180]
[-52.19861984 -18.49846077]
[-66.71922302 -13.65998936]
[-81.82324982 -16.13524055]
[-94.03991699 -25.35541725]
[-100.56192017 -39.20178986]
[-99.89054871 -54.49256897]
[-92.18007660 -67.71403503]
[-79.20232391 -75.82800293]
[-63.93947220 -76.96994019]
[-49.89881897 -70.87742615]
[-40.30680466 -58.95049286]
[-37.36759949 -43.92985153]
[-41.75661087 -29.26713943]
[-30.98793411 -18.82513046]
[-20.21925354 -8.38312149]
[-9.45057583 2.05888820]
[1.31810331 12.50089741]
[12.08678246 22.94290733]
[24.85265541 20.94670677]
[36.60414124 26.77176285]
[42.93090057 38.48300934]
[41.31443024 51.89183807]
[51.86644363 62.55274582]
[62.41846085 73.21365356]
[72.97047424 83.87456512]
[79.94208527 77.13934326]
[88.36815643 73.05211639]
[97.32274628 71.83738708]
[105.88680267 73.41593933]
[113.24222565 77.43166351]
[124.22303009 67.21295929]
[135.20382690 56.99424744]
[145.75584412 46.33333969]
[155.86128235 35.24820709]
[165.96672058 24.16307259]
[176.07215881 13.07793808]
[175.52131653 -2.48915291]
[185.92758179 -13.58709908]
[200.77182007 -14.01630116]
[210.87724304 -25.10143471]
[220.98268127 -36.18656921]
[231.08811951 -47.27170181]
[234.06596375 -63.39821625]
[249.60925293 -68.62683105]
[261.72836304 -57.57879639]
[257.95620728 -41.61938477]
[242.17324829 -37.16626740]
[232.06782532 -26.08113289]
[221.96238708 -14.99600029]
[211.85694885 -3.91086602]
[212.79922485 10.90964985]
[202.70880127 22.29550743]
[187.15728760 23.18337250]
[177.05184937 34.26850510]
[166.94641113 45.35364151]
[156.84098816 56.43877411]
[156.87133789 59.30060959]
[155.73431396 62.34633255]
[153.35415649 65.11790466]
[149.82708740 67.13862610]
[145.42254639 67.97505188]
[134.44174194 78.19375610]
[123.46093750 88.41246796]
[126.11688232 98.38916779]
[124.70708466 108.61663055]
[136.86041260 117.40847778]
[149.01374817 126.20031738]
[161.16708374 134.99215698]
[173.32041931 143.78399658]
[184.53895569 139.63276672]
[196.24452209 141.42312622]
[205.51898193 148.59083557]
[210.10755920 159.24597168]
[208.96647644 170.67002869]
[220.74862671 179.95341492]
[232.53076172 189.23680115]
[247.08045959 184.10751343]
[262.08828735 187.68089294]
[272.76525879 198.81668091]
[275.70443726 213.96147156]
[269.96789551 228.28263855]
[257.38616943 237.21034241]
[241.97404480 237.89578247]
[228.64945984 230.12023926]
[221.66426086 216.36485291]
[223.24737549 201.01893616]
[211.46524048 191.73554993]
[199.68309021 182.45216370]
[181.71868896 185.73191833]
[166.76889038 174.70083618]
[164.52857971 155.93733215]
[152.37524414 147.14549255]
[140.22190857 138.35365295]
[128.06857300 129.56181335]
[115.91524506 120.76996613]
[96.02974701 128.54557800]
[74.76543427 118.81067657]
[65.36157990 130.49688721]
[55.95772171 142.18309021]
[46.55386353 153.86930847]
[37.15000534 165.55551147]
[27.74614906 177.24171448]
] def
/pairs [
[13 25]
[14 24]
[15 23]
[16 22]
[34 152]
[35 151]
[36 150]
[37 149]
[38 148]
[39 147]
[40 75]
[41 74]
[42 73]
[43 72]
[46 68]
[47 67]
[48 66]
[49 65]
[50 64]
[51 63]
[80 113]
[81 112]
[82 111]
[83 106]
[84 105]
[85 104]
[86 103]
[89 100]
[90 99]
[91 98]
[92 97]
[115 145]
[116 144]
[117 143]
[118 142]
[119 141]
[124 138]
[125 137]
[126 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
152 cmark
39 147 1 gmark
74 cmark
42 73 1 gmark
43 cmark
46 68 1 gmark
46 cmark
48 cmark
66 cmark
50 64 1 gmark
81 cmark
106 cmark
86 103 1 gmark
119 cmark

% End Annotations
% show it
showpage
end
%%EOF
